import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';
import 'package:strawberryenglish/models/student.dart';
import 'package:strawberryenglish/providers/student_provider.dart';
import 'package:strawberryenglish/screens/calendar_body.dart';
import 'package:strawberryenglish/screens/enrollment_screen/trial_screen_2_input.dart';
import 'package:strawberryenglish/screens/signup_screen/signup_screen_2_input.dart';
import 'package:strawberryenglish/screens/trial_screen/trial_screen_1_input.dart';
import 'package:strawberryenglish/screens/trial_screen/trial_screen_3_button.dart';
import 'package:strawberryenglish/themes/my_theme.dart';
import 'package:strawberryenglish/widgets/my_app_bar.dart';
import 'package:strawberryenglish/widgets/my_drawer.dart';
import 'package:strawberryenglish/widgets/my_header.dart';
import 'package:universal_html/js.dart' as js;

class TrialScreen extends StatefulWidget {
  TrialScreen({super.key});

  final TextEditingController nameController = TextEditingController();
  final TextEditingController birthDateController = TextEditingController();
  // final TextEditingController emailController = TextEditingController();
  // final TextEditingController passwordController = TextEditingController();
  // final TextEditingController confirmPasswordController =
  //     TextEditingController();

  final TextEditingController phoneNumberController = TextEditingController();
  final TextEditingController trialDayController = TextEditingController();
  final TextEditingController trialTimeController = TextEditingController();
  final TextEditingController countryController = TextEditingController();
  final TextEditingController skypeIdController = TextEditingController();
  final TextEditingController studyPurposeController = TextEditingController();
  final TextEditingController referralSourceController =
      TextEditingController();

  @override
  State<TrialScreen> createState() => _TrialScreenState();
}

class _TrialScreenState extends State<TrialScreen> {
  @override
  Widget build(BuildContext context) {
    double screenWidth = MediaQuery.of(context).size.width;
    double fontSize = (screenWidth * 0.025).clamp(12, 18);
    return Theme(
      data: customTheme, // customThemeÏùÑ Ï†ÅÏö©
      child: Scaffold(
        // appBar: MyMenuAppBar(),
        body: Stack(
          children: [
            FutureBuilder<Student?>(
              future: Provider.of<StudentProvider>(context)
                  .getStudent(), // ÏÉàÎ°úÏö¥ Future ÏÉùÏÑ±
              builder: (context, snapshot) {
                if (snapshot.connectionState == ConnectionState.waiting ||
                    !snapshot.hasData) {
                  // Î°úÎî©Ï§ëÏùº Îïå ÌëúÏãúÌï† ÌôîÎ©¥
                  return const Center(
                    child: CircularProgressIndicator(),
                    // child: Text('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌïú ÏÑúÎπÑÏä§ÏûÖÎãàÎã§.'),
                  );
                } else if (snapshot.hasError) {
                  // ÏóêÎü¨Í∞Ä Î∞úÏÉùÌñàÏùÑ Îïå ÌëúÏãúÌï† ÌôîÎ©¥
                  return Center(
                    child: Text('Error: ${snapshot.error}'),
                  );
                } else if (snapshot.hasData) {
                  // Îç∞Ïù¥ÌÑ∞Í∞Ä Î°úÎìúÎêòÏóàÏùÑ Îïå ÌëúÏãúÌï† ÌôîÎ©¥
                  widget.nameController.text =
                      snapshot.data!.data['name'] ?? '';
                  widget.birthDateController.text =
                      snapshot.data!.data['birthDate'] ?? '';
                  widget.phoneNumberController.text =
                      snapshot.data!.data['phoneNumber'] ?? '';
                  widget.countryController.text =
                      snapshot.data!.data['country'] ?? '';
                  widget.skypeIdController.text =
                      snapshot.data!.data['skypeId'] ?? '';
                  widget.studyPurposeController.text =
                      snapshot.data!.data['studyPurpose'] ?? '';
                  widget.referralSourceController.text =
                      snapshot.data!.data['referralSource'] ?? '';
                  widget.trialDayController.text =
                      snapshot.data!.data['trialDay'] ?? '';
                  widget.trialTimeController.text =
                      snapshot.data!.data['trialTime'] ?? '';
                  return ListView(
                    padding: const EdgeInsets.only(
                        top: 93), // Make space for the AppBar
                    children: [
                      // Ï†úÎ™©
                      const MyHeader('Ï≤¥ÌóòÌïòÍ∏∞'),
                      // Ïª§Î≤Ñ ÌéòÏù¥ÏßÄ
                      if (snapshot.data!.getStudentTrialState() ==
                          StudentState.trialRequested) ...[
                        Text(
                          """

*Ï≤¥Ìóò ÏàòÏóÖ Ïã†Ï≤≠ ÏôÑÎ£å

Ï≤¥Ìóò ÏàòÏóÖ ÌôïÏ†ï ÏïàÎÇ¥Î•º ÏúÑÌï¥ 

Î∞òÎìúÏãú Ïπ¥Ïπ¥Ïò§ÌÜ° Ï±ÑÎÑêÏùÑ ÌÜµÌï¥ 'Ï≤¥Ìóò ÏàòÏóÖ Ïã†Ï≤≠ ÏôÑÎ£å'ÎùºÍ≥† ÎßêÏîÄÌï¥ Ï£ºÏÑ∏Ïöî. 

Ï≤¥Ìóò ÏàòÏóÖ ÏùºÏ†ïÏù¥ ÌôïÏ†ïÎêòÎ©¥ Ïπ¥Ïπ¥Ïò§ÌÜ°ÏúºÎ°ú ÏïàÎÇ¥ÎìúÎ¶¨Í≤†ÏäµÎãàÎã§.

Í∑∏ Ïô∏ Ï†ïÎ≥¥ ÏàòÏ†ï Î∞è Î¨∏ÏùòÏÇ¨Ìï≠ ÏûàÏúºÏãúÎã§Î©¥ Ïπ¥Ïπ¥Ïò§ÌÜ° Ï±ÑÎÑêÎ°ú Î¨∏ÏùòÌï¥ Ï£ºÏÑ∏Ïöî.

""",
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontSize: fontSize,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ]
                      // Ï≤¥Ìóò ÌôïÏ†ï ÏÉÅÌÉú
                      else if (snapshot.data!.getStudentTrialState() ==
                          StudentState.trialConfirmed) ...[
                        Text(
                          """

*Ï≤¥Ìóò ÏàòÏóÖ ÌôïÏ†ï

${snapshot.data!.data['name']} ÎãòÏùò Ï≤¥Ìóò ÏàòÏóÖÏù¥ ÌôïÏ†ïÎêòÏóàÏäµÎãàÎã§ :)

ÎÇ†Ïßú: ${DateFormat('yyyyÎÖÑ MMÏõî ddÏùº').format(DateTime.parse(snapshot.data!.data['trialDate']))} ${getWeekdayFromNumber(DateTime.parse(snapshot.data!.data['trialDate']).weekday)}ÏöîÏùº

ÏãúÍ∞Ñ: ${DateFormat('HÏãú mmÎ∂Ñ').format(DateTime.parse('${snapshot.data!.data['trialDate']} ${snapshot.data!.data['trialTime']}'))} (ÌïúÍµ≠ÏãúÍ∞Ñ)

Tutor: ${snapshot.data!.data['trialTutor'] ?? ''}
 
Ï≤¥Ìóò ÏàòÏóÖÏùÄ 20Î∂ÑÍ∞Ñ Î†àÎ≤® ÌÖåÏä§Ìä∏ Î™©Ï†ÅÏúºÎ°ú ÏßÑÌñâÎêòÎ©∞ Ï†ïÍ∑ú ÏàòÏóÖÍ≥º ÏàòÏóÖ Î∞©ÏãùÏù¥ Îã§Î•¥Îã§Îäî Ï†ê ÏïàÎÇ¥ÎìúÎ¶ΩÎãàÎã§ :)

ÌäúÌÑ∞ Î∂ÑÏù¥ Ïä§Ïπ¥Ïù¥ÌîÑÎ•º ÌÜµÌï¥ ÏπúÍµ¨ ÏöîÏ≤≠ Î©îÏãúÏßÄÎ•º Ï†ÑÎã¨ ÎìúÎ¶¥ ÏòàÏ†ïÏûÖÎãàÎã§.
ÏõêÌôúÌïú Ï≤¥Ìóò ÏàòÏóÖ ÏßÑÌñâÏùÑ ÏúÑÌï¥ ÏàòÏóÖ ÏãúÏûë 30Î∂Ñ Ï†ÑÍπåÏßÄ ÏπúÍµ¨ ÏàòÎùΩÏù¥ ÎêòÏñ¥Ïïº Ï≤¥Ìóò ÏàòÏóÖÏù¥ ÌôïÏ†ïÎêúÎã§Îäî Ï†ê Íº≠ ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.

Í∞êÏÇ¨Ìï©ÎãàÎã§.
Enjoy your English with üçì

""",
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontSize: fontSize,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ]
                      // Ï≤¥Ìóò ÏôÑÎ£å ÏÉÅÌÉú
                      else if (snapshot.data!.getStudentTrialState() ==
                          StudentState.trialFinished) ...[
                        Text(
                          """

*Ï≤¥Ìóò ÏàòÏóÖ Ï¢ÖÎ£å

${snapshot.data!.data['name']} ÎãòÏùò Ï≤¥Ìóò ÏàòÏóÖÏù¥ Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§ :)

ÎÇ†Ïßú: ${DateFormat('yyyyÎÖÑ MMÏõî ddÏùº').format(DateTime.parse(snapshot.data!.data['trialDate']))} ${getWeekdayFromNumber(DateTime.parse(snapshot.data!.data['trialDate']).weekday)}ÏöîÏùº

ÏãúÍ∞Ñ: ${DateFormat('HÏãú mmÎ∂Ñ').format(DateTime.parse('${snapshot.data!.data['trialDate']} ${snapshot.data!.data['trialTime']}'))} (ÌïúÍµ≠ÏãúÍ∞Ñ)

Tutor: ${snapshot.data!.data['trialTutor'] ?? ''}
 
Î¨¥Î£å Ï≤¥ÌóòÏùÄ Í≥ÑÏ†ïÎãπ 1ÌöåÎßå Ïã†Ï≤≠ Í∞ÄÎä•Ìï©ÎãàÎã§.

Ï∂îÍ∞Ä Î¨∏ÏùòÏÇ¨Ìï≠ÏùÄ Ïπ¥Ïπ¥Ïò§ÌÜ° Ï±ÑÎÑêÏùÑ Ïù¥Ïö©Ìï¥Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.

""",
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontSize: fontSize,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                        Center(
                          child: SizedBox(
                            width: (screenWidth * 0.5).clamp(100, 500),
                            child: ElevatedButton(
                              style: ElevatedButton.styleFrom(
                                minimumSize: const Size(
                                    double.infinity, 60), // Î≤ÑÌäº ÏÇ¨Ïù¥Ï¶à Ï°∞Ï†ï
                              ),
                              onPressed: () {
                                Navigator.popAndPushNamed(
                                        context, '/enrollment')
                                    .then((_) => setState(() {}));
                              },
                              child: Text(
                                'ÏàòÍ∞ïÏã†Ï≤≠',
                                style: TextStyle(
                                    fontSize:
                                        (screenWidth * 0.025).clamp(10, 16),
                                    fontWeight: FontWeight.bold,
                                    color: Colors.white),
                              ),
                            ),
                          ),
                        ),
                      ] else ...[
                        SignupScreen2Input(
                          nameController: widget.nameController,
                          birthDateController: widget.birthDateController,
                        ),
                        TrialScreen1Input(
                          phoneNumberController: widget.phoneNumberController,
                          countryController: widget.countryController,
                          skypeIdController: widget.skypeIdController,
                          studyPurposeController: widget.studyPurposeController,
                          referralSourceController:
                              widget.referralSourceController,
                        ),
                        TrialScreen2Input(
                          trialDayController: widget.trialDayController,
                          trialTimeController: widget.trialTimeController,
                        ),
                        TrialScreen3Button(
                          nameController: widget.nameController,
                          birthDateController: widget.birthDateController,
                          phoneNumberController: widget.phoneNumberController,
                          trialDayController: widget.trialDayController,
                          trialTimeController: widget.trialTimeController,
                          countryController: widget.countryController,
                          skypeIdController: widget.skypeIdController,
                          studyPurposeController: widget.studyPurposeController,
                          referralSourceController:
                              widget.referralSourceController,
                        ),
                        // ÌöåÏÇ¨Ï†ïÎ≥¥
                        // const CompanyInfo(),
                      ]
                    ],
                  );
                } else {
                  // Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏùÑ Îïå ÌëúÏãúÌï† ÌôîÎ©¥
                  return const Center(
                      // child: Text('No data available'),
                      );
                }
              },
            ),
            Positioned(
              bottom: 30,
              right: 30,
              child: InkWell(
                onTap: () {
                  js.context
                      .callMethod('open', ['http://pf.kakao.com/_xmXCtxj']);
                },
                child: Image.asset(
                  'assets/images/kakao_talk.png',
                ),
              ),
            ),
            const Positioned(
              child: MyMenuAppBar(),
            ),
          ],
        ),
        drawer: const MyDrawer(),
      ),
    );
  }
}
